{"version":3,"file":"static/js/591.7175d9cc.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/dist/chunk-FQXH56BT.mjs","pages/ProductsPage/ProductItem/ProductItem.jsx","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs","pages/ProductsPage/ProductsList/ProductsList.jsx","pages/ProductsPage/ProductsFilter/ProductsFilter.jsx","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["// src/badge.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport {\n  Badge\n};\n","import { useDispatch } from 'react-redux';\nimport { addToCart } from '../../../redux/cart/cartSlice';\nimport { Button, Box, Image, Badge } from '@chakra-ui/react'\nimport { useSelector } from 'react-redux';\n\n\n\n\n\nexport const ProductsItem = ({item}) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart.cart)\n  \n    return (\n      <Box maxW='sm' borderWidth='1px' borderRadius='lg' overflow='hidden'>\n      <Image src='https://bit.ly/2Z4KKcF' alt='Rear view of modern home with pool' />\n\n      <Box p='6'>\n        <Box display='flex' alignItems='baseline'>\n          <Badge borderRadius='full' px='2' colorScheme='teal'>\n            {item.state}\n          </Badge>\n        </Box>\n\n        <Box\n          mt='1'\n          fontWeight='semibold'\n          as='h4'\n          lineHeight='tight'\n          isTruncated\n        >\n         <a href=' '>{item.title}</a> \n        </Box>\n\n        <Box>\n          {item.price} $\n                </Box>\n                <Box>\n                    <Button colorScheme='teal' variant='outline'  \n              onClick={() => dispatch(addToCart(item))}>Add to Cart</Button>             \n            {cart.find(cartItem=>cartItem.id===item.id) && <Badge borderRadius='full' px='2' colorScheme='teal'>In cart</Badge>}\n                </Box>\n      </Box>\n    </Box>\n  );\n};","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n","import { ProductsItem } from \"../ProductItem/ProductItem\";\n\nimport { SimpleGrid,Box} from '@chakra-ui/react'\n\nexport const ProductsList = ({ products }) => {\n  \n  return (\n    <SimpleGrid minChildWidth='250px' spacing='20px' mt={2}>\n      {products.map(product => (\n        <Box key={product.id}><ProductsItem item={product } />\n        </Box>\n      ))}\n    </SimpleGrid>\n  );\n};","import { useSelector, useDispatch } from \"react-redux\";\nimport { statusFilters } from \"redux/products/constants\";\nimport { getProductsFilter } from \"redux/selectors\";\nimport { setProductsFilter } from \"redux/products/filtersSlice\";\nimport { Button, Stack  } from '@chakra-ui/react'\n\nexport const ProductsFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getProductsFilter);\n\n  const handleFilterChange = filter => dispatch(setProductsFilter(filter));\n\n  return (\n    <Stack spacing={4} direction='row' align='center' >\n      <Button colorScheme='teal' size='sm'\n        selected={filter === statusFilters.sortByPopularDown}\n        onClick={() => handleFilterChange(statusFilters.sortByPopularDown)}\n      >\n        sortByPopularDown\n      </Button>\n      <Button colorScheme='teal' size='sm'\n        selected={filter === statusFilters.sortByPopularUp}\n        onClick={() => handleFilterChange(statusFilters.sortByPopularUp)}\n      >\n        sortByPopularUp\n      </Button>\n      <Button colorScheme='teal' size='sm'\n        selected={filter === statusFilters.sortByPriceDown}\n        onClick={() => handleFilterChange(statusFilters.sortByPriceDown)}\n      >\n        sortByPriceDown\n          </Button>\n          <Button colorScheme='teal' size='sm'\n        selected={filter === statusFilters.sortByPriceUp}\n        onClick={() => handleFilterChange(statusFilters.sortByPriceUp)}\n      >\n        sortByPriceUp\n      </Button>\n    </Stack>\n  );\n};\n","import { Container } from '../../components/Container/Container'; \nimport { ProductsList } from './ProductsList/ProductsList'; \nimport { ProductsFilter } from './ProductsFilter/ProductsFilter'; \nimport { useSelector } from \"react-redux\";\nimport { getProducts,getProductsFilter } from \"redux/selectors\";\nimport { statusFilters } from \"redux/products/constants\";\n\n\nconst getVisibleProducts = (products, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.sortByPriceUp:\n      return [...products].sort((firstProduct, secondProduct) => secondProduct.price - firstProduct.price);\n    case statusFilters.sortByPriceDown:\n      return [...products].sort(\n      (firstProduct, secondProduct) => firstProduct.price - secondProduct.price\n      );\n    case statusFilters.sortByPopularUp:\n      return [...products].sort(\n      (firstProduct, secondProduct) => secondProduct.rate - firstProduct.rate\n      );\n    case statusFilters.sortByPopularDown:\n      return [...products].sort(\n      (firstProduct, secondProduct) => firstProduct.rate - secondProduct.rate\n     );\n    default:\n      return [...products];\n  }\n};\n\nconst ProductsPage = () => {\n  const products = useSelector(getProducts);\n  const statusFilter = useSelector(getProductsFilter);\n  const visibleProducts = getVisibleProducts(products, statusFilter);\n\n  return (\n    <Container>\n      <h2>Our Products</h2>\n      <ProductsFilter/>\n      <ProductsList products={visibleProducts}/>\n      \n    </Container>\n  );\n};\n\nexport default ProductsPage;"],"names":["Badge","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","jsx","chakra","cx","__css","display","whiteSpace","verticalAlign","displayName","ProductsItem","item","dispatch","useDispatch","cart","useSelector","state","maxW","borderWidth","borderRadius","overflow","src","alt","p","alignItems","px","colorScheme","mt","fontWeight","as","lineHeight","isTruncated","href","title","price","variant","onClick","addToCart","find","cartItem","id","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","SimpleGrid","count","columns","spacingX","spacingY","spacing","minChildWidth","theme","useTheme","width","mapResponsive","value","n","_value","getToken","widthToColumns","ProductsList","products","map","product","ProductsFilter","filter","getProductsFilter","handleFilterChange","setProductsFilter","direction","align","size","selected","statusFilters","visibleProducts","statusFilter","sort","firstProduct","secondProduct","rate","getVisibleProducts","getProducts","Container"],"sourceRoot":""}